/**
 * Most Visible v0.9.1
 *
 * Returns the most visible element from a given set
 * of elements.
 *
 * licence: MIT
 */
!function(a,b){
// Universal Module Definition
/* jshint strict:false */
/* global define: false, module: false */
"function"==typeof define&&define.amd?define([],b):"object"==typeof module&&module.exports?module.exports=b(a):a.MostVisible=b(a)}(this,function(a){"use strict";function b(a,d){return this instanceof b?(this.elements=a,this.options=c({},b.defaults,d),void(this.viewportHeight=document.documentElement.clientHeight)):new b(a,d).getMostVisible()}function c(){for(var a=1;a<arguments.length;a++)for(var b in arguments[a])arguments[a].hasOwnProperty(b)&&(arguments[0][b]=arguments[a][b]);return arguments[0]}return b.defaults={percentage:!1},b.prototype={/**
		 * @returns {Element} Most visible element.
		 */
getMostVisible:function(){for(var a=null,b=0,c=0;c<this.elements.length;c++){var d=this.getVisibleHeight(this.elements[c]);d>b&&(b=d,a=this.elements[c])}return a},/**
		 *
		 * @param {Element} element Element to check the visibility of.
		 * @returns {number} The visible height of the element in pixels or a percentage of the element's total height.
		 */
getVisibleHeight:function(a){var b=a.getBoundingClientRect(),c=b.bottom-b.top,d={top:b.top>=0&&b.top<this.viewportHeight,bottom:b.bottom>0&&b.bottom<this.viewportHeight},e=0;if(d.top&&d.bottom)
// Whole element is visible
e=c;else if(d.top)e=this.viewportHeight-b.top;else if(d.bottom)e=b.bottom;else if(c>this.viewportHeight&&b.top<0){var f=Math.abs(b.top);f<c&&(
// Part of the element is visible
e=c-f)}return this.options.percentage?e/c*100:e}},b.makeJQueryPlugin=function(c){c=c||a.jQuery,c&&(c.fn.mostVisible=function(a){var d=new b(this.get(),a),e=d.getMostVisible();return c(e?e:[])})},b.makeJQueryPlugin(),b});